/*!
 * \file init.cpp
 * \author Casper Tak
 */

#include "init.h"

#include "HAN_IoT_Shield/HAN_IoT_Shield.h"
#include "FireRiskIndex/FireRiskIndex.h"
#include "payload/payload.h"

#include <Arduino.h>

/// \param Firerisk Firerisk index number
TheThingsNetwork ttn(loraSerial, debugSerial, freqPlan);
/// \param iotShieldpotmeter requires Pin and minumum and maximum values
iotShieldPotmeter potmeter1(PIN_POT_RED, -20, 150);
iotShieldPotmeter potmeter2(PIN_POT_WHITE, 0, 3); // 6000

iotShieldButton redButton(PIN_SWITCH_RED);
iotShieldButton blackButton(PIN_SWITCH_BLACK);

fireRisk fireRisk_;
Payload Payload_;
sensor sensor_;

/// \brief IoT-node credentials
/// \pre requires the appEui and appKey generated by the things network
const char *appEui = "0000000000000005";
const char *appKey = "401EEDB241A7CFD9318D84776D1BB252";

/// \param version SFFA Firmware version control number
const uint8_t version = 1;

/// \param Firerisk Firerisk index number
int FireRisk = 0;

unsigned long prevTime = millis();

void main::init()
{
    debugSerial.begin(9600);
    debugSerial.println("STATUS");
}

void main::program()
{
    Payload_.StrictSetVersionControl(version);

    sensor_.updateBatteryState();
    sensor_.updateTemperature();
    sensor_.updateHumidity();
    sensor_.updateGas();
    sensor_.updateCoordinates();
    sensor_.debugSerialSensorData();
    delay(50);

    FireRisk = fireRisk_.getFireRisk();

    sendPayload();
}

void sensor::updateTemperature()
{
    Temperature = potmeter1.getValue();
    Payload_.StrictSetTemperature(Temperature);
    fireRisk_.setTemperatureState(Temperature);
}

void sensor::updateHumidity()
{
    if (redButton.isPressed() && !(Humidity >= 100.0f))
    {
        Humidity += 5.0f;
    }
    else if (blackButton.isPressed() && !(Humidity <= 0.0f))
    {
        Humidity -= 5.0f;
    }

    Payload_.StrictSetHumidity(Humidity);
    fireRisk_.setHumidityState(Humidity);
}
}